definitions:
  groups.Dto:
    properties:
      description:
        type: string
      id:
        type: integer
      nameGroup:
        type: string
      owner:
        type: string
      private:
        type: boolean
      thumbnail:
        type: string
      type:
        type: string
    type: object
  groups.PayLoad:
    properties:
      description:
        type: string
      nameGroup:
        type: string
      private:
        type: boolean
      type:
        type: string
      users:
        items:
          type: string
        type: array
    type: object
  userdetail.Dto:
    properties:
      first:
        type: string
      fullName:
        type: string
      hostName:
        type: string
      id:
        type: string
      last:
        type: string
      role:
        type: string
      socketId:
        type: string
      status:
        type: string
      userName:
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /api/v1/groups:
    get:
      consumes:
      - application/json
      description: Get all groups
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/groups.Dto'
            type: array
      summary: Get all groups
      tags:
      - groups
    post:
      consumes:
      - application/json
      description: create a new groups
      parameters:
      - description: Create groups
        in: body
        name: groupPayLoad
        required: true
        schema:
          $ref: '#/definitions/groups.PayLoad'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/groups.Dto'
      summary: Create a new groups
      tags:
      - groups
  /api/v1/groups/{idGroup}:
    delete:
      consumes:
      - application/json
      description: Delete the group corresponding to the input idGroup
      parameters:
      - description: ID of the group to be updated
        in: path
        name: idGroup
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete group identified by the given idGroup
      tags:
      - groups
    put:
      consumes:
      - application/json
      description: Update the group corresponding to the input groupId
      parameters:
      - description: ID of the group to be updated
        in: path
        name: idGroup
        required: true
        type: integer
      - description: update groups
        in: body
        name: groupPayLoad
        required: true
        schema:
          $ref: '#/definitions/groups.PayLoad'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/groups.Dto'
      summary: Update group by groupId
      tags:
      - groups
  /api/v1/groups/{idGroup}/members:
    delete:
      consumes:
      - application/json
      description: delete user to group
      parameters:
      - description: ID of the group to be add user
        in: path
        name: idGroup
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200": {}
      summary: delete user to group
      tags:
      - groupUser
    get:
      consumes:
      - application/json
      description: Get all member groups
      parameters:
      - description: ID of the group to be updated
        in: path
        name: idGroup
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/groups.Dto'
            type: array
      summary: Get all member groups
      tags:
      - groupUser
    patch:
      consumes:
      - application/json
      description: add user to group
      parameters:
      - description: ID of the group to be updated
        in: path
        name: idGroup
        required: true
        type: integer
      - description: add user to group
        in: body
        name: groupPayLoad
        required: true
        schema:
          $ref: '#/definitions/groups.PayLoad'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/groups.Dto'
            type: array
      summary: add user to group
      tags:
      - groupUser
  /api/v1/groups/{idGroup}/members/{userId}:
    delete:
      consumes:
      - application/json
      description: delete user to group by admin
      parameters:
      - description: ID group
        in: path
        name: idGroup
        required: true
        type: integer
      - description: ID user want delete
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200": {}
      summary: delete user to group by admin
      tags:
      - groupUser
  /api/v1/user:
    get:
      consumes:
      - application/json
      description: find user by keyword
      parameters:
      - description: name search by keyword
        in: query
        name: keyword
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/userdetail.Dto'
            type: array
      summary: find user by keyword
      tags:
      - user
  /api/v1/user/info:
    get:
      consumes:
      - application/json
      description: check user api
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userdetail.Dto'
      summary: check user api
      tags:
      - user
  /api/v1/user/online:
    delete:
      consumes:
      - application/json
      description: user logout api
      parameters:
      - description: hostName
        in: query
        name: hostName
        type: string
      - description: socketId
        in: query
        name: socketId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
      summary: user logout
      tags:
      - user
swagger: "2.0"
