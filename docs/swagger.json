{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is swagger for chat server.\nlocal:\t  http://localhost:5000/.\nstaging:    http://vdat-mcsvc-chat-staging.vdatlab.com/.\nproduction: https://vdat-mcsvc-chat.vdatlab.com/.",
        "title": "Swagger Chat server API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.1"
    },
    "host": "localhost:5000",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/all-article": {
            "get": {
                "description": "Get all article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article"
                ],
                "summary": "Get all article",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/article.Dto"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/article": {
            "get": {
                "description": "Get the article corresponding to the input user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article"
                ],
                "summary": "Get article by userid",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/article.Dto"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Insert new article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article"
                ],
                "summary": "Insert article",
                "parameters": [
                    {
                        "description": "insert article",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/article.Payload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/article.Dto"
                        }
                    }
                }
            }
        },
        "/api/v1/article/{idArticle}": {
            "get": {
                "description": "Get the article corresponding to the input title",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article"
                ],
                "summary": "Get article by title",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name search by title",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/article.Dto"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update the article corresponding to the input idArticle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article"
                ],
                "summary": "Update article by idArticle",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the article to be updated",
                        "name": "idArticle",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update article",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/article.Payload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/article.Dto"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the article corresponding to the input idArticle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article"
                ],
                "summary": "Delete article by idArticle",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the article to be updated",
                        "name": "idArticle",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseBool"
                        }
                    }
                }
            }
        },
        "/api/v1/comment": {
            "post": {
                "description": "Insert new comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Insert comment",
                "parameters": [
                    {
                        "description": "insert comment",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/comment.PayLoad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/comment.Dto"
                        }
                    }
                }
            }
        },
        "/api/v1/comment/parent/{idParent}": {
            "get": {
                "description": "Get the comment corresponding to the input parentId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Get comment by parent id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the parent comment to be find",
                        "name": "idParent",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/comment.Dto"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/comment/rely": {
            "post": {
                "description": "Insert new comment rely",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Insert comment rely",
                "parameters": [
                    {
                        "description": "insert rely comment",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/comment.PayLoad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/comment.Dto"
                        }
                    }
                }
            }
        },
        "/api/v1/comment/{idArticle}": {
            "get": {
                "description": "Get the comment corresponding to the input articleId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Get comment by Article id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the article to be find",
                        "name": "idArticle",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/comment.Dto"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/comment/{id}": {
            "put": {
                "description": "Update the Comment corresponding to the input id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Update Comment by idCmt",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the comment to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update comment",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/comment.PayLoad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/comment.Dto"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete comment by id comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Delete comment by idCmt",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the comment to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseBool"
                        }
                    }
                }
            }
        },
        "/api/v1/groups": {
            "get": {
                "description": "Get all groups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Get all groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/groups.Dto"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create a new groups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Create a new groups",
                "parameters": [
                    {
                        "description": "Create groups",
                        "name": "groupPayLoad",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groups.PayLoad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/groups.Dto"
                        }
                    }
                }
            }
        },
        "/api/v1/groups/{idGroup}": {
            "put": {
                "description": "Update the group corresponding to the input groupId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Update group by groupId",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the group to be updated",
                        "name": "idGroup",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update groups",
                        "name": "groupPayLoad",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groups.PayLoad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/groups.Dto"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the group corresponding to the input idGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Delete group identified by the given idGroup",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the group to be updated",
                        "name": "idGroup",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/v1/groups/{idGroup}/members": {
            "get": {
                "description": "Get all member groups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groupUser"
                ],
                "summary": "Get all member groups",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the group to be updated",
                        "name": "idGroup",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/userdetail.Dto"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "delete user to group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groupUser"
                ],
                "summary": "delete user to group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the group to be add user",
                        "name": "idGroup",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "patch": {
                "description": "add user to group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groupUser"
                ],
                "summary": "add user to group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the group to be updated",
                        "name": "idGroup",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "add user to group",
                        "name": "groupPayLoad",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groups.PayLoad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/api/v1/groups/{idGroup}/members/{userId}": {
            "delete": {
                "description": "delete user to group by admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groupUser"
                ],
                "summary": "delete user to group by admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID group",
                        "name": "idGroup",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID user want delete",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/api/v1/user": {
            "get": {
                "description": "find user by keyword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "find users by keyword",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name search by keyword",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/userdetail.Dto"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/info": {
            "get": {
                "description": "check user api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "check user api",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userdetail.Dto"
                        }
                    }
                }
            }
        },
        "/api/v1/user/online": {
            "delete": {
                "description": "user logout api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "user logout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hostName",
                        "name": "hostName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "socketId",
                        "name": "socketId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/message/{socketId}": {
            "get": {
                "description": "chat group by websocket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dchat"
                ],
                "summary": "Chat websocket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "socketId to know client",
                        "name": "socketId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token to be join chat",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ]
            },
            "post": {
                "description": "NOTE\nEvent For Send Message\n\n\"type\":\"subcribe_group\" - to open the group the person has joined\n\n\"type\":\"send_text\" - to send text from current client to users in that group\n\n\"type\":\"load_old_mess\" - to load continues history message in group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dchat"
                ],
                "summary": "Chat websocket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "socketId to know client",
                        "name": "socketId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token to be join chat",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Works based on field event type (read NOTE)",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dchat.Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dchat.Message"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "article.Dto": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updateAt": {
                    "type": "string"
                },
                "updateBy": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "article.Payload": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "thumbnail": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updateBy": {
                    "type": "string"
                }
            }
        },
        "comment.Dto": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "idArticle": {
                    "type": "integer"
                },
                "num": {
                    "type": "integer"
                },
                "parentId": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updateAt": {
                    "type": "string"
                },
                "updateBy": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "comment.PayLoad": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "idArticle": {
                    "type": "integer"
                },
                "parentId": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "dchat.Data": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string",
                    "example": "tin nhan moi"
                },
                "createdAt": {
                    "type": "string"
                },
                "groupId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "idContinueOldMess": {
                    "type": "integer"
                },
                "numChildMess": {
                    "type": "integer"
                },
                "parentID": {
                    "type": "integer"
                },
                "sender": {
                    "type": "string",
                    "example": "null"
                },
                "socketId": {
                    "type": "string",
                    "example": "9999"
                },
                "status": {
                    "type": "string",
                    "example": "null"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dchat.Message": {
            "type": "object",
            "properties": {
                "client": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/dchat.Data"
                },
                "type": {
                    "type": "string",
                    "example": "send_text"
                }
            }
        },
        "groups.Dto": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nameGroup": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "private": {
                    "type": "boolean"
                },
                "thumbnail": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "groups.PayLoad": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "nameGroup": {
                    "type": "string"
                },
                "private": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "userdetail.Dto": {
            "type": "object",
            "properties": {
                "first": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "hostName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "socketId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "utils.ResponseBool": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "boolean"
                }
            }
        }
    }
}